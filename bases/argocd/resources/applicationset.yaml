apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: exampleteam-apps
spec:
  generators:
    - merge:
        generators:
          - matrix:
              generators:
                - git:
                    directories:
                      - path: env/*/*
                    repoURL: "https://github.com/eliihen/gitops-fun.git"
                    revision: HEAD
                - list:
                    elements:
                      - allowEmpty: false
                        autoSync: true
                        key: "{{ .path.basenameNormalized}}"
                        prune: true
                        selfHeal: true
                        tool: directory
          - matrix:
              generators:
                - git:
                    directories:
                      - path: env/*/*/config.json
                    repoURL: "https://github.com/eliihen/gitops-fun.git"
                    revision: HEAD
                - list:
                    elements:
                      - allowEmpty: false
                        autoSync: true
                        key: "{{ .path.basenameNormalized}}"
                        prune: true
                        selfHeal: true
                        tool: directory
        mergeKeys:
          - key
  goTemplate: true
  goTemplateOptions:
    - missingkey=error
  template:
    metadata:
      name: "{{.path.basenameNormalized}}"
    spec:
      destination:
        namespace: "{{ index .path.segments 2 }}"
        server: "{{ index .path.segments 1 }}"
      project: exampleteam
      source:
        path: "{{.path.path}}"
        repoURL: "https://github.com/eliihen/gitops-fun.git"
        targetRevision: HEAD
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            app.kubernetes.io/managed-by: argocd
            pod-security.kubernetes.io/audit: restricted
            team: exampleteam
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
          - PrunePropagationPolicy=background
  templatePatch: |
    spec:
      source:
        directory:
      {{- if eq .tool "directory" }}
          exclude: config.json
      {{- end }}
    {{- if .autoSync }}
      syncPolicy:
        automated:
          allowEmpty: {{ .allowEmpty | toJson }}
          prune: {{ .prune | toJson }}
          selfHeal: {{ .selfHeal | toJson }}
    {{- end }}
